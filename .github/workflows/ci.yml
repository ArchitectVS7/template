name: CI

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  DATABASE_URL: 'postgresql://test:test@localhost:5432/test_db'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        workspace: [frontend, backend]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install root dependencies
      run: npm ci

    - name: Install workspace dependencies
      run: |
        cd ${{ matrix.workspace }}
        npm ci

    - name: TypeScript compilation check
      run: |
        cd ${{ matrix.workspace }}
        npm run type-check

    - name: Lint check
      run: |
        cd ${{ matrix.workspace }}
        npm run lint

    - name: Run tests
      run: |
        cd ${{ matrix.workspace }}
        npm run test
      env:
        CI: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Build frontend
      run: npm run build:frontend

    - name: Build backend
      run: npm run build:backend
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist

    - name: Upload backend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/dist

  e2e:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Install Playwright browsers
      run: |
        cd backend
        npx playwright install --with-deps

    - name: Run database migrations
      run: |
        cd backend
        npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}

    - name: Run E2E tests
      run: |
        cd backend
        npm run test:e2e
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        CI: true

    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: e2e-test-results
        path: backend/test-results